//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSOWebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://TIMSSSSO/webservice", ConfigurationName="SSOWebService.serviceSoap")]
    public interface serviceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerTokenIsValid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerTokenIsValidResult> SSOCustomerTokenIsValidAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/TIMSSCustomerIdentifierGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.TIMSSCustomerIdentifierGetResult> TIMSSCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/TIMSSCustomerIdentifierSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.VendorSSOCustomerIdentifierSetResult> TIMSSCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.VendorSSOCustomerIdentifierGetResult> VendorSSOCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.VendorSSOCustomerIdentifierSetResult> VendorSSOCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerLogout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerLogoutResult> SSOCustomerLogoutAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorTokenEncrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.VendorTokenEncryptResult> VendorTokenEncryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerTokenDecrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.CustomerTokenDecryptResult> CustomerTokenDecryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/AuthorizeAccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.AuthorizeAccessResult> AuthorizeAccessAsync(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetByEmailAsync(string vendorUsername, string vendorPassword, string EmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetByUsernameAsync(string vendorUsername, string vendorPassword, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByCustomerToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetByCustomerTokenAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerRegisterResult> SSOCustomerRegisterAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerRegisterLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerRegisterLogin1> SSOCustomerRegister1Async(SSOWebService.SSOCustomerRegisterLogin request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerAuthenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerAuthenticateResult> SSOCustomerAuthenticateAsync(string vendorUsername, string vendorPassword, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSODeleteDuplicateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSODeleteDuplicateCustomerResult> SSODeleteDuplicateCustomerAsync(string vendorUsername, string vendorPassword, string DuplicateCustomerXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerDoesVendorCustomerExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOVendorCustomerResult> SSOCustomerDoesVendorCustomerExistAsync(string vendorUsername, string vendorPassword, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerAuthenticateAndGetId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerAuthenticateAndGetVendorCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetVendorCustomerIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByTimssID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByTimssIDAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByUserNameAsync(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateUserNameByTimssID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameByTimssIDAsync(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByTimssID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByTimssIDAsync(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOSendPasswordReset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SSOSendPasswordResetAsync(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOSendPasswordResetByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SSOSendPasswordResetByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOEnableDisableCustomerAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOEnableDisableCustomerAccountAsync(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerPasswordIsStrong", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SSOCustomerPasswordIsStrongAsync(string vendorUsername, string vendorPassword, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOUpdateEmailAddressbyCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOUpdateEmailAddressbyCustomerIdAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CheckSSOEmailAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> CheckSSOEmailAddressAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOGetUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SSOGetUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOGetPasswordMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerTokenIsValidResult> SSOGetPasswordMessageAsync(string vendorUsername, string vendorPassword, string vendorIdentifier, string vendorBlock, string CustomerEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSODeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SSODeleteUserAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOResetUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SSOResetUserNameAsync(string vendorUsername, string vendorPassword, string vendorIdentifier, string vendorBlock, string CustomerEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOSendNewRegistrationEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerTokenIsValidResult> SSOSendNewRegistrationEmailAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerTokenIsValidResult
    {
        
        private string[] errorsField;
        
        private bool validField;
        
        private string newCustomerTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Valid
        {
            get
            {
                return this.validField;
            }
            set
            {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string NewCustomerToken
        {
            get
            {
                return this.newCustomerTokenField;
            }
            set
            {
                this.newCustomerTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class CustomerAuthenticateAndGetCustomerIdResult
    {
        
        private string[] errorsField;
        
        private bool resultField;
        
        private string customerIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustomerId
        {
            get
            {
                return this.customerIdField;
            }
            set
            {
                this.customerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOVendorCustomerResult
    {
        
        private bool vendorCustomerAlreadyExistField;
        
        private string usernameField;
        
        private string emailField;
        
        private string vendorCustomerIdField;
        
        private string vendorUserNameField;
        
        private string customerIdField;
        
        private string[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool VendorCustomerAlreadyExist
        {
            get
            {
                return this.vendorCustomerAlreadyExistField;
            }
            set
            {
                this.vendorCustomerAlreadyExistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string VendorCustomerId
        {
            get
            {
                return this.vendorCustomerIdField;
            }
            set
            {
                this.vendorCustomerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VendorUserName
        {
            get
            {
                return this.vendorUserNameField;
            }
            set
            {
                this.vendorUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CustomerId
        {
            get
            {
                return this.customerIdField;
            }
            set
            {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSODeleteDuplicateCustomerResult
    {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerAuthenticateResult
    {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerUpdateResult
    {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerRegisterResult
    {
        
        private string[] errorsField;
        
        private bool resultField;
        
        private string newCustomerTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string NewCustomerToken
        {
            get
            {
                return this.newCustomerTokenField;
            }
            set
            {
                this.newCustomerTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerGetResult
    {
        
        private bool userExistsField;
        
        private string userNameField;
        
        private string emailField;
        
        private bool disableAccountFlagField;
        
        private string[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool UserExists
        {
            get
            {
                return this.userExistsField;
            }
            set
            {
                this.userExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DisableAccountFlag
        {
            get
            {
                return this.disableAccountFlagField;
            }
            set
            {
                this.disableAccountFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class AuthorizeAccessResult
    {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class CustomerTokenDecryptResult
    {
        
        private string[] errorsField;
        
        private string customerTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerToken
        {
            get
            {
                return this.customerTokenField;
            }
            set
            {
                this.customerTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorTokenEncryptResult
    {
        
        private string[] errorsField;
        
        private string vendorTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string VendorToken
        {
            get
            {
                return this.vendorTokenField;
            }
            set
            {
                this.vendorTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerLogoutResult
    {
        
        private string[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorSSOCustomerIdentifierGetResult
    {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerIdentifier
        {
            get
            {
                return this.customerIdentifierField;
            }
            set
            {
                this.customerIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorSSOCustomerIdentifierSetResult
    {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerIdentifier
        {
            get
            {
                return this.customerIdentifierField;
            }
            set
            {
                this.customerIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class TIMSSCustomerIdentifierGetResult
    {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerIdentifier
        {
            get
            {
                return this.customerIdentifierField;
            }
            set
            {
                this.customerIdentifierField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SSOCustomerRegisterLogin", WrapperNamespace="http://TIMSSSSO/webservice", IsWrapped=true)]
    public partial class SSOCustomerRegisterLogin
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=0)]
        public string vendorUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=1)]
        public string vendorPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=2)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=3)]
        public string newPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=4)]
        public string emailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=5)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=6)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=7)]
        public bool SSOCustomerTokenNeeded;
        
        public SSOCustomerRegisterLogin()
        {
        }
        
        public SSOCustomerRegisterLogin(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded)
        {
            this.vendorUsername = vendorUsername;
            this.vendorPassword = vendorPassword;
            this.userName = userName;
            this.newPassword = newPassword;
            this.emailAddress = emailAddress;
            this.firstName = firstName;
            this.lastName = lastName;
            this.SSOCustomerTokenNeeded = SSOCustomerTokenNeeded;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SSOCustomerRegisterLoginResponse", WrapperNamespace="http://TIMSSSSO/webservice", IsWrapped=true)]
    public partial class SSOCustomerRegisterLogin1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=0)]
        public SSOWebService.SSOCustomerRegisterResult SSOCustomerRegisterLoginResult;
        
        public SSOCustomerRegisterLogin1()
        {
        }
        
        public SSOCustomerRegisterLogin1(SSOWebService.SSOCustomerRegisterResult SSOCustomerRegisterLoginResult)
        {
            this.SSOCustomerRegisterLoginResult = SSOCustomerRegisterLoginResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface serviceSoapChannel : SSOWebService.serviceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class serviceSoapClient : System.ServiceModel.ClientBase<SSOWebService.serviceSoap>, SSOWebService.serviceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public serviceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(serviceSoapClient.GetBindingForEndpoint(endpointConfiguration), serviceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public serviceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(serviceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public serviceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(serviceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public serviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerTokenIsValidResult> SSOCustomerTokenIsValidAsync(string vendorUsername, string vendorPassword, string customerToken)
        {
            return base.Channel.SSOCustomerTokenIsValidAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.TIMSSCustomerIdentifierGetResult> TIMSSCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken)
        {
            return base.Channel.TIMSSCustomerIdentifierGetAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.VendorSSOCustomerIdentifierSetResult> TIMSSCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier)
        {
            return base.Channel.TIMSSCustomerIdentifierSetAsync(vendorUsername, vendorPassword, userName, TIMSSCustomerIdentifier);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.VendorSSOCustomerIdentifierGetResult> VendorSSOCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken)
        {
            return base.Channel.VendorSSOCustomerIdentifierGetAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.VendorSSOCustomerIdentifierSetResult> VendorSSOCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier)
        {
            return base.Channel.VendorSSOCustomerIdentifierSetAsync(vendorUsername, vendorPassword, customerToken, VendorsSSOCustomerIdentifier);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerLogoutResult> SSOCustomerLogoutAsync(string vendorUsername, string vendorPassword, string customerToken)
        {
            return base.Channel.SSOCustomerLogoutAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.VendorTokenEncryptResult> VendorTokenEncryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string url)
        {
            return base.Channel.VendorTokenEncryptAsync(vendorUsername, vendorPassword, vendorBlock, url);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.CustomerTokenDecryptResult> CustomerTokenDecryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken)
        {
            return base.Channel.CustomerTokenDecryptAsync(vendorUsername, vendorPassword, vendorBlock, customerToken);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.AuthorizeAccessResult> AuthorizeAccessAsync(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri)
        {
            return base.Channel.AuthorizeAccessAsync(vendorUsername, vendorPassword, theVendorUsername, theVendorPassword, webServiceUri);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId)
        {
            return base.Channel.SSOCustomerGetAsync(vendorUsername, vendorPassword, TIMSSCustomerId);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetByEmailAsync(string vendorUsername, string vendorPassword, string EmailAddress)
        {
            return base.Channel.SSOCustomerGetByEmailAsync(vendorUsername, vendorPassword, EmailAddress);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetByUsernameAsync(string vendorUsername, string vendorPassword, string UserName)
        {
            return base.Channel.SSOCustomerGetByUsernameAsync(vendorUsername, vendorPassword, UserName);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerGetResult> SSOCustomerGetByCustomerTokenAsync(string vendorUsername, string vendorPassword, string customerToken)
        {
            return base.Channel.SSOCustomerGetByCustomerTokenAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerRegisterResult> SSOCustomerRegisterAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName)
        {
            return base.Channel.SSOCustomerRegisterAsync(vendorUsername, vendorPassword, userName, newPassword, emailAddress, firstName, lastName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSOWebService.SSOCustomerRegisterLogin1> SSOWebService.serviceSoap.SSOCustomerRegister1Async(SSOWebService.SSOCustomerRegisterLogin request)
        {
            return base.Channel.SSOCustomerRegister1Async(request);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerRegisterLogin1> SSOCustomerRegister1Async(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded)
        {
            SSOWebService.SSOCustomerRegisterLogin inValue = new SSOWebService.SSOCustomerRegisterLogin();
            inValue.vendorUsername = vendorUsername;
            inValue.vendorPassword = vendorPassword;
            inValue.userName = userName;
            inValue.newPassword = newPassword;
            inValue.emailAddress = emailAddress;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.SSOCustomerTokenNeeded = SSOCustomerTokenNeeded;
            return ((SSOWebService.serviceSoap)(this)).SSOCustomerRegister1Async(inValue);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName)
        {
            return base.Channel.SSOCustomerUpdateUserNameAsync(vendorUsername, vendorPassword, CustomerEmailAddress, newUserName);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress)
        {
            return base.Channel.SSOCustomerUpdateEmailAsync(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword)
        {
            return base.Channel.SSOCustomerUpdatePasswordAsync(vendorUsername, vendorPassword, CustomerEmailAddress, newPassword);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerAuthenticateResult> SSOCustomerAuthenticateAsync(string vendorUsername, string vendorPassword, string userName, string password)
        {
            return base.Channel.SSOCustomerAuthenticateAsync(vendorUsername, vendorPassword, userName, password);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSODeleteDuplicateCustomerResult> SSODeleteDuplicateCustomerAsync(string vendorUsername, string vendorPassword, string DuplicateCustomerXML)
        {
            return base.Channel.SSODeleteDuplicateCustomerAsync(vendorUsername, vendorPassword, DuplicateCustomerXML);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOVendorCustomerResult> SSOCustomerDoesVendorCustomerExistAsync(string vendorUsername, string vendorPassword, string username)
        {
            return base.Channel.SSOCustomerDoesVendorCustomerExistAsync(vendorUsername, vendorPassword, username);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword)
        {
            return base.Channel.CustomerAuthenticateAndGetIdAsync(vendorUsername, vendorPassword, customerUserName, customerPassword);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetVendorCustomerIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword)
        {
            return base.Channel.CustomerAuthenticateAndGetVendorCustomerIdAsync(vendorUsername, vendorPassword, customerUserName, customerPassword);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByTimssIDAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId)
        {
            return base.Channel.SSOCustomerUpdateEmailByTimssIDAsync(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress, TimssCustomerId);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByUserNameAsync(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName)
        {
            return base.Channel.SSOCustomerUpdateEmailByUserNameAsync(vendorUsername, vendorPassword, newEmailAddress, UserName);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameByTimssIDAsync(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId)
        {
            return base.Channel.SSOCustomerUpdateUserNameByTimssIDAsync(vendorUsername, vendorPassword, newUserName, TimssCustomerId);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByTimssIDAsync(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword)
        {
            return base.Channel.SSOCustomerUpdatePasswordByTimssIDAsync(vendorUsername, vendorPassword, TimssCustomerId, newPassword);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string newPassword)
        {
            return base.Channel.SSOCustomerUpdatePasswordByUserNameAsync(vendorUsername, vendorPassword, UserName, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> SSOSendPasswordResetAsync(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken)
        {
            return base.Channel.SSOSendPasswordResetAsync(vendorUsername, vendorPassword, emailAddress, vendorIdentifier, vendorToken);
        }
        
        public System.Threading.Tasks.Task<bool> SSOSendPasswordResetByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken)
        {
            return base.Channel.SSOSendPasswordResetByUserNameAsync(vendorUsername, vendorPassword, UserName, emailAddress, vendorIdentifier, vendorToken);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOEnableDisableCustomerAccountAsync(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue)
        {
            return base.Channel.SSOEnableDisableCustomerAccountAsync(vendorUsername, vendorPassword, UserName, DisableFlagValue);
        }
        
        public System.Threading.Tasks.Task<string> SSOCustomerPasswordIsStrongAsync(string vendorUsername, string vendorPassword, string Password)
        {
            return base.Channel.SSOCustomerPasswordIsStrongAsync(vendorUsername, vendorPassword, Password);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerUpdateResult> SSOUpdateEmailAddressbyCustomerIdAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId, string strEmail)
        {
            return base.Channel.SSOUpdateEmailAddressbyCustomerIdAsync(vendorUsername, vendorPassword, TIMSSCustomerId, strEmail);
        }
        
        public System.Threading.Tasks.Task<bool> CheckSSOEmailAddressAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId)
        {
            return base.Channel.CheckSSOEmailAddressAsync(vendorUsername, vendorPassword, TIMSSCustomerId);
        }
        
        public System.Threading.Tasks.Task<string> SSOGetUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress)
        {
            return base.Channel.SSOGetUserNameAsync(vendorUsername, vendorPassword, CustomerEmailAddress);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerTokenIsValidResult> SSOGetPasswordMessageAsync(string vendorUsername, string vendorPassword, string vendorIdentifier, string vendorBlock, string CustomerEmailAddress)
        {
            return base.Channel.SSOGetPasswordMessageAsync(vendorUsername, vendorPassword, vendorIdentifier, vendorBlock, CustomerEmailAddress);
        }
        
        public System.Threading.Tasks.Task<bool> SSODeleteUserAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress)
        {
            return base.Channel.SSODeleteUserAsync(vendorUsername, vendorPassword, CustomerEmailAddress);
        }
        
        public System.Threading.Tasks.Task<bool> SSOResetUserNameAsync(string vendorUsername, string vendorPassword, string vendorIdentifier, string vendorBlock, string CustomerEmailAddress)
        {
            return base.Channel.SSOResetUserNameAsync(vendorUsername, vendorPassword, vendorIdentifier, vendorBlock, CustomerEmailAddress);
        }
        
        public System.Threading.Tasks.Task<SSOWebService.SSOCustomerTokenIsValidResult> SSOSendNewRegistrationEmailAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress)
        {
            return base.Channel.SSOSendNewRegistrationEmailAsync(vendorUsername, vendorPassword, CustomerEmailAddress);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.serviceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.serviceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.serviceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://login75.acr.org/webservice/service.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.serviceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://login75.acr.org/webservice/service.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            serviceSoap,
            
            serviceSoap12,
        }
    }
}
